{"mappings":"AAAA;AAEA,MAAM,gBAAgB;OAAI,SAAS,gBAAgB,CAAC;CAAM;AAC1D,MAAM,yBAAyB,SAAS,aAAa,CAAC;AAEtD,MAAM,eAAe,CAAC,KAAO,OAAO,GAAG,SAAS,CAAC,GAAG,UAAU,CAAC,KAAK;AAEpE,MAAM,WAAW,CAAC;IAChB,KAAK,IAAI,CACP,CAAC,GAAG,IAAM,aAAa,EAAE,OAAO,CAAC,MAAM,IAAI,aAAa,EAAE,OAAO,CAAC,MAAM;IAG1E,OAAO;AACT;AAEA,MAAM,sBAAsB,SAAU,IAAI;IACxC,MAAM,YAAY,EAAE;IAEpB,KAAK,MAAM,MAAM,KAAM;QACrB,MAAM,WAAW;YACf,MAAM,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI;YAC9C,UAAU,GAAG,OAAO,CAAC,QAAQ;YAC7B,QAAQ,GAAG,OAAO,CAAC,MAAM;YACzB,KAAK,GAAG,OAAO,CAAC,GAAG;QACrB;QAEA,UAAU,IAAI,CAAC;IACjB;IAEA,OAAO;AACT;AAEA,MAAM,aAAa,SAAS;AAE5B,oBAAoB;AAEpB,uBAAuB,MAAM,IAAI","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employeesList = [...document.querySelectorAll('li')];\nconst employeesListContainer = document.querySelector('ul');\n\nconst numberFormat = (el) => Number(el.substring(1).replaceAll(',', ''));\n\nconst sortList = (list) => {\n  list.sort(\n    (a, b) => numberFormat(b.dataset.salary) - numberFormat(a.dataset.salary),\n  );\n\n  return list;\n};\n\nconst getEmployeesObjects = function (list) {\n  const employees = [];\n\n  for (const el of list) {\n    const employee = {\n      name: el.textContent.replaceAll('\\n', '').trim(),\n      position: el.dataset.position,\n      salary: el.dataset.salary,\n      age: el.dataset.age,\n    };\n\n    employees.push(employee);\n  }\n\n  return employees;\n};\n\nconst sortedList = sortList(employeesList);\n\ngetEmployeesObjects(sortedList);\n\nemployeesListContainer.append(...sortedList);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}